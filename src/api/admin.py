import sqlalchemy
from src.api import database as db

from fastapi import APIRouter, Depends, Request
from pydantic import BaseModel
from src.api import auth

router = APIRouter(
    prefix="/admin",
    tags=["admin"],
    dependencies=[Depends(auth.get_api_key)],
)

@router.post("/reset")
def reset():
    """Resets entire shop. Drop tables and recreate them. """
    with db.engine.begin() as connection:
        # DROP accounts table
        connection.execute(sqlalchemy.text("DROP accounts"))

        # DROP carts table
        connection.execute(sqlalchemy.text("DROP carts"))

        # recreate accounts table
        connection.execute(sqlalchemy.text("CREATE table public.accounts(id integer generated by default as identity, email text null, name text null, created_at timestamp with time zone not null default now(),current_cart integer null,constraint accounts_pkey primary key (id),constraint accounts_current_cart_key unique (current_cart),constraint accounts_email_key unique (email),constraint accounts_current_cart_fkey foreign key (current_cart) references carts (id) on update cascade on delete restrict)"))

        # recreate carts table
        connection.execute(sqlalchemy.text("CREATE table public.carts (id integer generated by default as identity,account_id integer null,created_at timestamp with time zone not null default now(),checked_out boolean null default false,constraint carts_pkey primary key (id),constraint public_carts_customer_id_fkey foreign key (account_id) references accounts (id) on update restrict on delete restrict)"))

        # Reset reviews table - has foreign key from accounts so may need to drop and recreate
        connection.execute(sqlalchemy.text("TRUNCATE reviews"))

        # Reset wishlisted table - has foreign key from accounts so may need to drop and recreate
        connection.execute(sqlalchemy.text("TRUNCATE wishlisted"))

        # Reset purchases table - has foreign key from accounts so may need to drop and recreate
        connection.execute(sqlalchemy.text("TRUNCATE purchases"))

        # Reset cart_items table - foreign key from carts so may need to drop and recreate
        connection.execute(sqlalchemy.text("TRUNCATE cart_items"))

        # Reset carts table - has foreign key from accounts so may need to drop and recreate
        connection.execute(sqlalchemy.text("TRUNCATE carts"))

        # Reset transactions table - keep 
        connection.execute(sqlalchemy.text("TRUNCATE transactions"))

    return "OK"

